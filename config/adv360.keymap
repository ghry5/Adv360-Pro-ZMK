#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define HYP LS(LC(LA(LGUI)))

#define HYPER(key) LS(LC(LA(LG(key))))

// ()

#define LEFT_PAR LS(N8)
#define RIGHT_PAR LS(N9)

// []

#define LEFT_BRK RA(N5)
#define RIGHT_BRK RA(N6)

// {}

#define LEFT_BRC RA(N8)
#define RIGHT_BRC RA(N9)

// <>

#define LEFT_ANGLE GRAVE
#define RIGHT_ANGLE LS(GRAVE)

// @

#define AT_SYM RA(L)

// ~

#define TILDE_SYM RA(N)

// * 

#define STAR_SYM LS(RBKT)

// /

#define FSLASH LS(N7)
#define BSLASH RA(LS(N7))

// |

#define VSLASH RA(N7)

// "

#define DQUOTE LS(N2)

// '

#define SQUOTE LS(BSLH)
#define LAYER_DEFAULT 0
#define LAYER_KEYPAD 1
#define LAYER_FN 2
#define LAYER_MOD 3

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        pipe_ampersand: pipe_ampersand {
            compatible = "zmk,behavior-mod-morph";
            label = "PIPE_AMPERSAND";
            #binding-cells = <0>;
            bindings = <&kp VSLASH>, <&kp LS(N6)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        quotes: quotes {
            compatible = "zmk,behavior-mod-morph";
            label = "DQUOTE_SQUATE";
            #binding-cells = <0>;
            bindings = <&kp DQUOTE>, <&kp SQUOTE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TILDE>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp NUBS     &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog LAYER_KEYPAD                                                 &mo LAYER_MOD  &kp N6  &kp N7    &kp N8     &kp N9    &kp N0             &kp MINUS
&kp TAB      &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                             &none          &kp Y   &kp U     &kp I      &kp O     &kp P              &kp LBKT
&mt HYP ESC  &kp A      &kp S     &kp D     &kp F      &kp G   &none              &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none          &kp H   &kp J     &kp K      &kp L     &lt LAYER_FN SEMI  &kp SQT
&kp LSHFT    &kp Z      &kp X     &kp C     &kp V      &kp B                                 &kp HOME      &kp PG_UP                            &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH           &kp RSHFT
&kp LCTRL    &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp SPACE          &kp LGUI   &kp END       &kp PG_DN  &kp BSPC   &kp ENTER              &kp DOWN  &kp UP     &kp BSLH  &kp RBKT           &kp RALT
            >;
        };

        keypad {
            bindings = <
&kp NUBS   &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                      &trans     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                       &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none   &trans  &trans      &trans  &trans  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                   &trans      &trans                     &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&kp LCTRL  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &kp DOWN    &kp UP        &kp KP_DOT     &kp RBKT         &kp RALT
            >;
        };

        fn {
            bindings = <
&kp F1       &kp F2          &kp F3           &kp F4        &kp F5        &kp F6   &trans                                      &trans  &kp F7    &kp F8         &kp F9           &kp F10        &kp F11       &kp F12
&kp LG(TAB)  &trans          &trans           &quotes       &m_backtick   &trans   &none                                       &none   &trans    &kp FSLASH     &pipe_ampersand  &kp BSLASH     &trans        &trans
&trans       &kp AT_SYM      &kp LEFT_PAR     &kp LEFT_BRK  &kp LEFT_BRC  &kp DEL  &none   &trans  &trans      &trans  &trans  &none   &kp BSPC  &kp RIGHT_BRC  &kp RIGHT_BRK    &kp RIGHT_PAR  &mo LAYER_FN  &trans
&kp LSHFT    &kp LEFT_ANGLE  &kp RIGHT_ANGLE  &kp KP_EQUAL  &trans        &trans                   &trans      &trans                  &m_tilde  &trans         &trans           &trans         &trans        &trans
&trans       &trans          &trans           &trans        &trans                 &trans  &trans  &trans      &trans  &trans  &trans            &trans         &trans           &trans         &trans        &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                          &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &none            &none       &bt BT_CLR      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none                                      &none           &none                                           &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG  &bl BL_TOG  &none           &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };

        empty {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &mo 3   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
